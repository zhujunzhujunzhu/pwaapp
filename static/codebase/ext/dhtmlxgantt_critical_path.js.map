{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/./sources/core/relations/links_builder.js","webpack://[name]/./sources/utils/helpers.js","webpack://[name]/./sources/core/relations/graph_helper.js","webpack://[name]/./sources/core/relations/links_common.js","webpack://[name]/./sources/ext/critical_path/critical_path.js","webpack://[name]/./sources/ext/critical_path/slack.js","webpack://[name]/./sources/ext/critical_path.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","gantt","getVirtualRoot","mixin","getSubtaskDates","id","config","root_id","type","types","project","$source","$target","$virtual","getLinkedTasks","includePredecessors","startIds","clearCache","_isLinksCacheEnabled","_startLinksCache","relations","visited","result","length","this","_getLinkedTasks","push","_endLinksCache","_collectRelations","rootObj","isChild","visitedLinks","linkKey","successors","_getSuccessors","predecessors","_getPredecessors","hashSum","rootTask","visitedTasks","output","from","undefined","tasksStack","current","pop","isTaskExists","getTask","rel","isSameParent","sourceParent","targetParent","target","hasChild","children","getChildren","units","second","minute","hour","day","week","month","quarter","year","isDate","obj","getFullYear","getMonth","getDate","arrayFilter","arr","callback","filter","getSecondsInUnit","unit","forEach","workArray","slice","arrayMap","map","resArray","arrayFind","find","arrayDifference","item","arraySome","hashToArray","hash","sortArrayOfHash","field","desc","compare","a","b","sort","throttle","timeout","wait","apply","arguments","setTimeout","isArray","Array","isValidDate","isNaN","getTime","isStringObject","Function","toString","constructor","isNumberObject","isBooleanObject","delay","timer","$cancelTimeout","$pending","args","clearTimeout","$execute","objectKeys","keys","requestAnimationFrame","w","webkitRequestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","cb","isEventable","attachEvent","detachEvent","helpers","getVertices","ids","len","source","vertices","topologicalSort","edges","$incoming","successor","S","v","L","node","groupAdjacentEdges","edge","res","tarjanStronglyConnectedComponents","verticesHash","stack","edgesFromTasks","recurse","connectedComponents","getVertex","workStack","index","lowLink","onStack","e","Math","min","com","tasks","links","findLoops","cycles","component","_get_linked_task","link","getTarget","task","taskId","_get_link_target","_get_link_source","caching","formattedLinksStash","inheritedSuccessorsStash","inheritedPredecessorsStash","getPredecessorsCache","_formatLink","isSummaryTask","isChildOf","_getImplicitLinks","respectTargetOffset","auto_scheduling_move_projects","targetDates","start_date","end_date","to","getState","drag_id","calculateDuration","fromLength","fromTask","j","toLength","toTask","lag","subtaskLink","_convertToFinishToStartLink","taskParent","_isAutoSchedulable","auto_scheduling","parent","selectOffset","selectSourceLinks","skipChild","eachTask","linksCollection","siblingLink","getLink","siblingId","siblingTask","abs","duration","_getDirectDependencies","selectSuccessors","linksIds","concat","_getInheritedDependencies","cacheCollection","stop","inheritedRelations","eachParent","parentDependencies","_getDirectSuccessors","_getInheritedSuccessors","_getDirectPredecessors","_getInheritedPredecessors","skipInherited","String","sourceTask","targetTask","finish_to_start","preferredStart","additionalLag","start_to_start","finish_to_finish","start_to_finish","linksBuilder","graphHelper","_isProjectEnd","_hasDuration","_getProjectEnd","_needRecalc","_cache","reset","_isRecalcNeeded","_getLinks","_calculateBranch","path","criticalTasks","adjacentLinks","next","_getSlack","_calculateSummaryTasks","summaryHash","criticalHash","getParent","_calculate","summaryTasks","isCriticalTask","init","resetCache","handleTaskIdChange","oldId","newId","criticalPathHandler","highlight_critical_path","render","refreshTask","_private","_freeSlack","_totalSlack","_slackNeedCalculate","_linkedTasksById","_calculateTotalSlack","linksByTaskId","entry","slack","getFreeSlack","minSlack","linked","totalSlackByTaskId","_chainSlackCount","_slacksChanged","additional","targetWithMinimalSlack","_getTargetWithMinimalSlack","_calculateTaskSlack","_calculateRelationSlack","_calculateHierarchySlack","_calculateLinkSlack","linkId","getSlack","max","_resetTotalSlackCache","_shouldCalculateTotalSlack","getTotalSlack","dropCachedFreeSlack","slackHandler","criticalPath","assert","isCriticalLink","task1","task2","common","newSlack","next_task","relation","getTaskType","milestone"],"mappings":"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","file":"ext/dhtmlxgantt_critical_path.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext/dhtmlxgantt_critical_path\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext/dhtmlxgantt_critical_path\"] = factory();\n\telse\n\t\troot[\"ext/dhtmlxgantt_critical_path\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/codebase/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 263);\n","module.exports = function(gantt) {\n\treturn {\n\t\tgetVirtualRoot: function(){\n\t\t\treturn gantt.mixin(\n\t\t\t\tgantt.getSubtaskDates(),\n\t\t\t\t{\n\t\t\t\t\tid: gantt.config.root_id,\n\t\t\t\t\ttype: gantt.config.types.project,\n\t\t\t\t\t$source: [],\n\t\t\t\t\t$target: [],\n\t\t\t\t\t$virtual: true\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t\n\t\tgetLinkedTasks: function(id, includePredecessors){\n\t\t\tvar startIds = [id];\n\t\n\t\t\t//TODO: format links cache\n\t\t\tvar clearCache = false;\n\t\t\tif(!gantt._isLinksCacheEnabled()) {\n\t\t\t\tgantt._startLinksCache();\n\t\t\t\tclearCache = true;\n\t\t\t}\n\t\t\tvar relations = [];\n\t\t\tvar visited = {};\n\t\t\tvar result = {};\n\t\t\tfor(var i = 0; i < startIds.length; i++){\n\t\t\t\tthis._getLinkedTasks(startIds[i], visited, includePredecessors, result);\n\t\t\t}\n\t\n\t\t\tfor(var i in result){\n\t\t\t\trelations.push(result[i]);\n\t\t\t}\n\t\n\t\t\t//TODO: remove redundant edges before continue https://en.wikipedia.org/wiki/Transitive_reduction\n\t\t\tif(clearCache)\n\t\t\t\tgantt._endLinksCache();\n\t\t\treturn relations;\n\t\t},\n\t\n\t\t_collectRelations: function(rootObj, isChild, includePredecessors, visitedLinks){\n\t\t\tvar successors = gantt._getSuccessors(rootObj, isChild);\n\t\n\t\t\tvar predecessors = [];\n\t\t\tif (includePredecessors) {\n\t\t\t\tpredecessors = gantt._getPredecessors(rootObj, isChild);\n\t\t\t}\n\t\t\t\n\t\t\tvar linkKey;\n\t\t\tvar relations = [];\n\t\t\tfor(var i = 0; i < successors.length; i++){\n\t\t\t\tlinkKey = successors[i].hashSum;\n\t\t\t\tif(visitedLinks[linkKey]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}else{\n\t\t\t\t\tvisitedLinks[linkKey] = true;\n\t\t\t\t\trelations.push(successors[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(var i = 0; i < predecessors.length; i++){\n\t\t\t\tlinkKey = predecessors[i].hashSum;\n\t\t\t\tif(visitedLinks[linkKey]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}else{\n\t\t\t\t\tvisitedLinks[linkKey] = true;\n\t\t\t\t\trelations.push(predecessors[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn relations;\n\t\t},\n\t\t_getLinkedTasks: function(rootTask, visitedTasks, includePredecessors, output) {\n\t\t\tvar from = rootTask === undefined ? gantt.config.root_id : rootTask;\n\t\t\tvar visitedTasks = {};\n\t\t\tvar visitedLinks = {};\n\t\t\tvar rootObj;\n\t\n\t\t\tvar tasksStack = [{from: from, includePredecessors: includePredecessors, isChild:false}];\n\t\n\t\t\twhile(tasksStack.length){\n\t\t\t\tvar current = tasksStack.pop();\n\t\t\t\tvar isChild = current.isChild;\n\t\n\t\t\t\tfrom = current.from;\n\t\t\t\tif(visitedTasks[from]){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trootObj = gantt.isTaskExists(from) ? gantt.getTask(from) : this.getVirtualRoot();\n\t\t\t\tvisitedTasks[from] = true;\n\t\t\t\t\n\t\t\t\tvar relations = this._collectRelations(rootObj, isChild, includePredecessors, visitedLinks);\n\t\n\t\t\t\tfor(var i=0; i < relations.length; i++){\n\t\t\t\t\tvar rel = relations[i];\n\t\t\t\t\toutput[rel.hashSum] = rel;\n\t\t\t\t\tvar isSameParent = rel.sourceParent == rel.targetParent;\n\t\t\t\t\tvar targetTask = rel.target;\n\t\t\t\t\tif(!visitedTasks[targetTask])\n\t\t\t\t\t\ttasksStack.push({from: rel.target, includePredecessors: true, isChild: isSameParent});\n\t\t\t\t}\n\t\n\t\t\t\tif(gantt.hasChild(rootObj.id)){\n\t\t\t\t\tvar children = gantt.getChildren(rootObj.id);\n\t\t\t\t\tfor(var i=0; i < children.length; i++){\n\t\t\t\t\t\tif(!visitedTasks[children[i]])\n\t\t\t\t\t\t\ttasksStack.push({from: children[i], includePredecessors: true, isChild: true});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn output;\n\t\t}\n\t};\n};","var units = {\n\t\"second\": 1,\n\t\"minute\": 60,\n\t\"hour\": 60 * 60,\n\t\"day\": 60 * 60 * 24,\n\t\"week\": 60 * 60 * 24 * 7,\n\t\"month\": 60 * 60 * 24 * 30,\n\t\"quarter\": 60 * 60 * 24 * 30 * 3,\n\t\"year\": 60 * 60 * 24 * 365\n};\nfunction getSecondsInUnit(unit){\n\treturn units[unit] || units.hour;\n}\n\nfunction forEach(arr, callback) {\n\tif (arr.forEach) {\n\t\tarr.forEach(callback);\n\t} else {\n\t\tvar workArray = arr.slice();\n\t\tfor (var i = 0; i < workArray.length; i++) {\n\t\t\tcallback(workArray[i], i);\n\t\t}\n\t}\n}\n\nfunction arrayMap(arr, callback) {\n\tif (arr.map) {\n\t\treturn arr.map(callback);\n\t} else {\n\t\tvar workArray = arr.slice();\n\t\tvar resArray = [];\n\n\t\tfor (var i = 0; i < workArray.length; i++) {\n\t\t\tresArray.push(callback(workArray[i], i));\n\t\t}\n\t\treturn resArray;\n\t}\n}\n\n\nfunction arrayFind(arr, callback) {\n\tif (arr.find) {\n\t\treturn arr.find(callback);\n\t} else {\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (callback(arr[i], i)) {\n\t\t\t\treturn arr[i];\n\t\t\t}\n\t\t}\n\t}\n}\n\n// iframe-safe array type check instead of using instanceof\nfunction isArray(obj){\n\tif(Array.isArray){\n\t\treturn Array.isArray(obj);\n\t}else{\n\t\t// close enough\n\t\treturn (obj && obj.length !== undefined && obj.pop && obj.push);\n\t}\n}\n\n// non-primitive string object, e.g. new String(\"abc\")\nfunction isStringObject(obj){\n\treturn obj && typeof obj === \"object\"\n\t\t&& Function.prototype.toString.call(obj.constructor) === \"function String() { [native code] }\";\n}\n\n// non-primitive number object, e.g. new Number(5)\nfunction isNumberObject(obj){\n\treturn obj && typeof obj === \"object\"\n\t\t&& Function.prototype.toString.call(obj.constructor) === \"function Number() { [native code] }\";\n}\n\n// non-primitive number object, e.g. new Boolean(true)\nfunction isBooleanObject(obj){\n\treturn obj && typeof obj === \"object\"\n\t\t&& Function.prototype.toString.call(obj.constructor) === \"function Boolean() { [native code] }\";\n}\n\nfunction isDate(obj) {\n\tif (obj && typeof obj === \"object\") {\n\t\treturn !!(obj.getFullYear && obj.getMonth && obj.getDate);\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction isValidDate(obj){\n\treturn isDate(obj) && !isNaN(obj.getTime());\n}\n\nfunction arrayFilter(arr, callback) {\n\tvar result = [];\n\n\tif (arr.filter) {\n\t\treturn arr.filter(callback);\n\t} else {\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (callback(arr[i], i)) {\n\t\t\t\tresult[result.length] = arr[i];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nfunction hashToArray(hash) {\n\tvar result = [];\n\n\tfor (var key in hash) {\n\t\tif (hash.hasOwnProperty(key)) {\n\t\t\tresult.push(hash[key]);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction arraySome(arr, callback) {\n\tif (arr.length === 0) return false;\n\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (callback(arr[i], i, arr)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction arrayDifference(arr, callback) {\n\treturn arrayFilter(arr, function(item, i) {\n\t\treturn !callback(item, i);\n\t});\n}\n\nfunction throttle (callback, timeout) {\n\tvar wait = false;\n\n\treturn function () {\n\t\tif (!wait) {\n\t\t\tcallback.apply(null, arguments);\n\t\t\twait = true;\n\t\t\tsetTimeout(function () {\n\t\t\t\twait = false;\n\t\t\t}, timeout);\n\t\t}\n\t};\n}\n\nfunction delay (callback, timeout){\n\tvar timer;\n\n\tvar result = function() {\n\t\tresult.$cancelTimeout();\n\t\tcallback.$pending = true;\n\t\tvar args = Array.prototype.slice.call(arguments);\n\t\ttimer = setTimeout(function(){\n\t\t\tcallback.apply(this, args);\n\t\t\tresult.$pending = false;\n\t\t}, timeout);\n\t};\n\t\n\tresult.$pending = false;\n\tresult.$cancelTimeout = function(){\n\t\tclearTimeout(timer);\n\t\tcallback.$pending = false;\n\t};\n\tresult.$execute = function(){\n\t\tcallback();\n\t\tcallback.$cancelTimeout();\n\t};\n\n\treturn result;\n}\n\nfunction sortArrayOfHash(arr, field, desc) {\n\tvar compare = function(a, b) {\n\t\treturn a < b;\n\t};\n\n\tarr.sort(function(a, b) {\n\t\tif (a[field] === b[field]) return 0;\n\n\t\treturn desc ? compare(a[field], b[field]) : compare(b[field], a[field]);\n\t});\n}\n\nfunction objectKeys(obj) {\n\tif (Object.keys) {\n\t\treturn Object.keys(obj);\n\t}\n\tvar result = [];\n\tvar key;\n\tfor (key in obj) {\n\t\tif (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t\t\tresult.push(key);\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction requestAnimationFrame(callback) {\n\tvar w = window;\n\tvar foundRequestAnimationFrame = w.requestAnimationFrame\n\t\t|| w.webkitRequestAnimationFrame\n\t\t|| w.msRequestAnimationFrame\n\t\t|| w.mozRequestAnimationFrame\n\t\t|| w.oRequestAnimationFrame\n\t\t|| function(cb) { setTimeout(cb, 1000/60); };\n\treturn foundRequestAnimationFrame(callback);\n}\n\nfunction isEventable(obj) {\n\treturn obj.attachEvent && obj.detachEvent;\n}\n\nmodule.exports = {\n\tgetSecondsInUnit: getSecondsInUnit,\n\tforEach: forEach,\n\tarrayMap: arrayMap,\n\tarrayFind: arrayFind,\n\tarrayFilter: arrayFilter,\n\tarrayDifference: arrayDifference,\n\tarraySome: arraySome,\n\thashToArray: hashToArray,\n\tsortArrayOfHash: sortArrayOfHash,\n\tthrottle: throttle,\n\tisArray: isArray,\n\tisDate: isDate,\n\tisValidDate: isValidDate,\n\tisStringObject: isStringObject,\n\tisNumberObject: isNumberObject,\n\tisBooleanObject: isBooleanObject,\n\tdelay: delay,\n\tobjectKeys: objectKeys,\n\trequestAnimationFrame: requestAnimationFrame,\n\tisEventable: isEventable\n};","var helpers = require(\"../../utils/helpers\");\n\nmodule.exports = function(){\n\treturn {\n\t\tgetVertices: function(relations){\n\t\t\tvar ids = {};\n\t\t\tvar rel;\n\t\t\tfor(var i = 0, len = relations.length; i < len; i++){\n\t\t\t\trel = relations[i];\n\t\t\t\tids[rel.target] = rel.target;\n\t\t\t\tids[rel.source] = rel.source;\n\t\t\t}\n\n\t\t\tvar vertices = [];\n\t\t\tvar id;\n\t\t\tfor(var i in ids){\n\t\t\t\tid = ids[i];\n\t\t\t\tvertices.push(id);\n\t\t\t}\n\n\t\t\treturn vertices;\n\t\t},\n\t\ttopologicalSort: function(edges){\n\t\t\tvar vertices = this.getVertices(edges);\n\t\t\tvar hash = {};\n\n\t\t\tfor(var i = 0, len = vertices.length; i < len; i ++){\n\t\t\t\thash[vertices[i]] = {id: vertices[i], $source:[], $target:[], $incoming: 0};\n\t\t\t}\n\n\t\t\tfor(var i = 0, len = edges.length; i < len; i++){\n\t\t\t\tvar successor = hash[edges[i].target];\n\t\t\t\tsuccessor.$target.push(i);\n\t\t\t\tsuccessor.$incoming = successor.$target.length;\n\t\t\t\thash[edges[i].source].$source.push(i);\n\n\t\t\t}\n\n\t\t\t// topological sort, Kahn's algorithm\n\t\t\tvar S = vertices.filter(function(v){ return !hash[v].$incoming; });\n\n\t\t\tvar L = [];\n\n\t\t\twhile(S.length){\n\t\t\t\tvar n = S.pop();\n\n\t\t\t\tL.push(n);\n\n\t\t\t\tvar node = hash[n];\n\n\t\t\t\tfor(var i = 0; i < node.$source.length; i++){\n\t\t\t\t\tvar m = hash[edges[node.$source[i]].target];\n\t\t\t\t\tm.$incoming--;\n\t\t\t\t\tif(!m.$incoming){\n\t\t\t\t\t\tS.push(m.id);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn L;\n\n\t\t},\n\t\tgroupAdjacentEdges: function(edges){\n\t\t\tvar res = {};\n\t\t\tvar edge;\n\t\t\tfor(var i = 0, len = edges.length; i < len; i++){\n\t\t\t\tedge = edges[i];\n\t\t\t\tif(!res[edge.source]){\n\t\t\t\t\tres[edge.source] = [];\n\t\t\t\t}\n\t\t\t\tres[edge.source].push(edge);\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\ttarjanStronglyConnectedComponents: function(vertices, edges){\n\t\t\t//https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm\n\t\t\t// iterative implementation\n\t\t\tvar verticesHash = {};\n\t\t\tvar stack = [];\n\t\t\tvar edgesFromTasks = this.groupAdjacentEdges(edges);\n\t\t\tvar recurse = false;\n\t\t\tvar connectedComponents = [];\n\n\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\tvar root = getVertex(vertices[i]);\n\t\t\t\tif(root.visited) continue;\n\t\t\t\tvar workStack = [root];\n\t\t\t\tvar index = 0;\n\t\t\t\twhile(workStack.length){\n\t\t\t\t\tvar v = workStack.pop();\n\n\t\t\t\t\tif(!v.visited){\n\t\t\t\t\t\tv.index = index;\n\t\t\t\t\t\tv.lowLink = index;\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tstack.push(v);\n\t\t\t\t\t\tv.onStack = true;\n\t\t\t\t\t\tv.visited = true;\n\t\t\t\t\t}\n\t\t\t\t\trecurse = false;\n\t\t\t\t\tvar edges = edgesFromTasks[v.id] || [];\n\t\t\t\t\tfor(var e = 0; e < edges.length; e++){\n\t\t\t\t\t\tvar w = getVertex(edges[e].target);\n\t\t\t\t\t\tw.edge = edges[e];\n\t\t\t\t\t\tif(w.index === undefined){\n\t\t\t\t\t\t\tworkStack.push(v);\n\t\t\t\t\t\t\tworkStack.push(w);\n\t\t\t\t\t\t\trecurse = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}else if(w.onStack){\n\t\t\t\t\t\t\tv.lowLink = Math.min(v.lowLink, w.index);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(recurse)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tif (v.index == v.lowLink){\n\t\t\t\t\t\tvar com = {tasks:[], links:[]};\n\t\t\t\t\t\twhile(true){\n\t\t\t\t\t\t\tw = stack.pop();\n\t\t\t\t\t\t\tw.onStack = false;\n\t\t\t\t\t\t\tcom.tasks.push(w.id);\n\t\t\t\t\t\t\tif(w.edge){\n\t\t\t\t\t\t\t\tcom.links.push(w.edge.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(w == v){\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconnectedComponents.push(com);\n\t\t\t\t\t}\n\t\t\t\t\tif(workStack.length){\n\t\t\t\t\t\tw = v;\n\t\t\t\t\t\tv = workStack[workStack.length - 1];\n\t\t\t\t\t\tv.lowLink = Math.min(v.lowLink, w.lowLink);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn connectedComponents;\n\n\t\t\tfunction getVertex(id){\n\t\t\t\tif(!verticesHash[id]){\n\t\t\t\t\tverticesHash[id] = {id: id, onStack:false, index: undefined, lowLink: undefined, edge: undefined};\n\t\t\t\t}\n\n\t\t\t\treturn verticesHash[id];\n\t\t\t}\n\t\t},\n\n\t\tfindLoops: function(relations){\n\t\t\tvar cycles = [];\n\n\t\t\thelpers.forEach(relations, function(rel){\n\t\t\t\tif(rel.target == rel.source)\n\t\t\t\t\tcycles.push([rel.target, rel.source]);\n\t\t\t});\n\n\t\t\tvar vertices = this.getVertices(relations);\n\n\t\t\tvar connectedComponents = this.tarjanStronglyConnectedComponents(vertices, relations);\n\t\t\thelpers.forEach(connectedComponents, function(component){\n\t\t\t\tif(component.tasks.length > 1){\n\t\t\t\t\tcycles.push(component);//{ tasks: [task ids], links: [links ids]}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn cycles;\n\t\t\t//{task:id, link:link.type, lag: link.lag || 0, source: link.source}\n\t\t}\n\t};\n};","module.exports = function (gantt) {\n\t// helpers for building chain of dependencies, used for critical path calculation and for auto scheduling\n\n\tgantt._get_linked_task = function (link, getTarget) {\n\t\tvar task = null;\n\t\tvar taskId = getTarget ? link.target : link.source;\n\n\t\tif (gantt.isTaskExists(taskId)) {\n\t\t\ttask = gantt.getTask(taskId);\n\t\t}\n\n\t\treturn task;\n\t};\n\tgantt._get_link_target = function (link) {\n\t\treturn gantt._get_linked_task(link, true);\n\t};\n\n\tgantt._get_link_source = function (link) {\n\t\treturn gantt._get_linked_task(link, false);\n\t};\n\n\tvar caching = false;\n\tvar formattedLinksStash = {};\n\tvar inheritedSuccessorsStash = {};\n\tvar inheritedPredecessorsStash = {};\n\tvar getPredecessorsCache = {};\n\n\n\tgantt._isLinksCacheEnabled = function () {\n\t\treturn caching;\n\t};\n\tgantt._startLinksCache = function () {\n\t\tformattedLinksStash = {};\n\t\tinheritedSuccessorsStash = {};\n\t\tinheritedPredecessorsStash = {};\n\t\tgetPredecessorsCache = {};\n\t\tcaching = true;\n\t};\n\tgantt._endLinksCache = function () {\n\t\tformattedLinksStash = {};\n\t\tinheritedSuccessorsStash = {};\n\t\tinheritedPredecessorsStash = {};\n\t\tgetPredecessorsCache = {};\n\t\tcaching = false;\n\t};\n\n\tgantt._formatLink = function (link) {\n\n\n\t\tif (caching && formattedLinksStash[link.id]) {\n\t\t\treturn formattedLinksStash[link.id];\n\t\t}\n\n\t\tvar relations = [];\n\t\tvar target = this._get_link_target(link);\n\t\tvar source = this._get_link_source(link);\n\n\t\tif (!(source && target)) {\n\t\t\treturn relations;\n\t\t}\n\n\t\tif ((gantt.isSummaryTask(target) && gantt.isChildOf(source.id, target.id)) || (gantt.isSummaryTask(source) && gantt.isChildOf(target.id, source.id))) {\n\t\t\treturn relations;\n\t\t}\n\n\n\t\t// there are three kinds of connections at this point\n\t\t// task -> task - regular link\n\t\t// task -> project - transform it into set of regular links (task -> [each subtask]), use offset beetween subtask and project dates as lag, in order not to change mutual positions of subtasks inside a project\n\t\t// project -> task - transform it into ([each subtask] -> task) links\n\t\t// project -> project - transform it into ([each subtask of p1] -> [each subtask of p2]) links\n\n\t\tvar from = this._getImplicitLinks(link, source, function (c) {\n\t\t\treturn 0;\n\t\t}, true);\n\n\t\tvar respectTargetOffset = gantt.config.auto_scheduling_move_projects;\n\t\tvar targetDates = this.isSummaryTask(target) ? this.getSubtaskDates(target.id) : {\n\t\t\tstart_date: target.start_date,\n\t\t\tend_date: target.end_date\n\t\t};\n\t\tvar to = this._getImplicitLinks(link, target, function (c) {\n\t\t\tif (!respectTargetOffset) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\n\t\t\t\tif (!c.$target.length && !(gantt.getState().drag_id == c.id)) {// drag_id - virtual lag shouldn't restrict task that is being moved inside project\n\t\t\t\t\treturn gantt.calculateDuration({\n\t\t\t\t\t\tstart_date: targetDates.start_date,\n\t\t\t\t\t\tend_date: c.start_date,\n\t\t\t\t\t\ttask: source\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tfor (var i = 0, fromLength = from.length; i < fromLength; i++) {\n\t\t\tvar fromTask = from[i];\n\t\t\tfor (var j = 0, toLength = to.length; j < toLength; j++) {\n\t\t\t\tvar toTask = to[j];\n\n\t\t\t\tvar lag = fromTask.lag * 1 + toTask.lag * 1;\n\n\t\t\t\tvar subtaskLink = {\n\t\t\t\t\tid: link.id,\n\t\t\t\t\ttype: link.type,\n\t\t\t\t\tsource: fromTask.task,\n\t\t\t\t\ttarget: toTask.task,\n\t\t\t\t\tlag: (link.lag * 1 || 0) + lag\n\t\t\t\t};\n\n\t\t\t\trelations.push(gantt._convertToFinishToStartLink(toTask.task, subtaskLink, source, target, fromTask.taskParent, toTask.taskParent));\n\t\t\t}\n\t\t}\n\n\t\tif (caching)\n\t\t\tformattedLinksStash[link.id] = relations;\n\n\t\treturn relations;\n\t};\n\n\tgantt._isAutoSchedulable = function (task) {\n\t\treturn task.auto_scheduling !== false;\n\t};\n\n\tgantt._getImplicitLinks = function (link, parent, selectOffset, selectSourceLinks) {\n\t\tvar relations = [];\n\n\t\tif (this.isSummaryTask(parent)) {\n\n\t\t\t// if the summary task contains multiple chains of linked tasks - no need to consider every task of the chain,\n\t\t\t// it will be enough to check the first/last tasks of the chain\n\t\t\t// special conditions if there are unscheduled tasks in the chain, or negative lag values that put the end date of the successor task prior to its predecessors' date\n\t\t\tvar children = {};\n\t\t\tthis.eachTask(function (c) {\n\t\t\t\tif (!this.isSummaryTask(c)) {\n\t\t\t\t\tchildren[c.id] = c;\n\t\t\t\t}\n\t\t\t}, parent.id);\n\n\t\t\tvar skipChild;\n\n\t\t\tfor (var c in children) {\n\t\t\t\tvar task = children[c];\n\t\t\t\tvar linksCollection = selectSourceLinks ? task.$source : task.$target;\n\n\t\t\t\tskipChild = false;\n\n\t\t\t\tfor (var l = 0; l < linksCollection.length; l++) {\n\t\t\t\t\tvar siblingLink = gantt.getLink(linksCollection[l]);\n\t\t\t\t\tvar siblingId = selectSourceLinks ? siblingLink.target : siblingLink.source;\n\t\t\t\t\tvar siblingTask = children[siblingId];\n\t\t\t\t\tif (siblingTask && task.auto_scheduling !== false && siblingTask.auto_scheduling !== false) {\n\t\t\t\t\t\tif ((siblingLink.target == siblingTask.id && Math.abs(siblingLink.lag) <= siblingTask.duration) ||\n\t\t\t\t\t\t\t(siblingLink.target == task.id && Math.abs(siblingLink.lag) <= task.duration)) {\n\t\t\t\t\t\t\tskipChild = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skipChild) {\n\t\t\t\t\trelations.push({ task: task.id, taskParent: task.parent, lag: selectOffset(task) });\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\trelations.push({ task: parent.id, taskParent: parent.parent, lag: 0 });\n\t\t}\n\n\t\treturn relations;\n\t};\n\n\tgantt._getDirectDependencies = function (task, selectSuccessors) {\n\n\t\tvar links = [],\n\t\t\tsuccessors = [];\n\n\t\tvar linksIds = selectSuccessors ? task.$source : task.$target;\n\n\t\tfor (var i = 0; i < linksIds.length; i++) {\n\t\t\tvar link = this.getLink(linksIds[i]);\n\t\t\tif (this.isTaskExists(link.source) && this.isTaskExists(link.target)) {\n\t\t\t\tvar target = this.getTask(link.target);\n\t\t\t\tif (this._isAutoSchedulable(target)) {\n\t\t\t\t\tlinks.push(this.getLink(linksIds[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\tsuccessors = successors.concat(this._formatLink(links[i]));\n\t\t}\n\n\t\treturn successors;\n\t};\n\n\tgantt._getInheritedDependencies = function (task, selectSuccessors) {\n\n\t\t//var successors = [];\n\t\tvar stop = false;\n\t\tvar inheritedRelations = [];\n\t\tvar cacheCollection;\n\t\tif (this.isTaskExists(task.id)) {\n\t\t\tthis.eachParent(function (parent) {\n\t\t\t\tif (stop)\n\t\t\t\t\treturn;\n\n\t\t\t\tif (caching) {\n\t\t\t\t\tcacheCollection = selectSuccessors ? inheritedSuccessorsStash : inheritedPredecessorsStash;\n\t\t\t\t\tif (cacheCollection[parent.id]) {\n\t\t\t\t\t\tinheritedRelations = inheritedRelations.concat(cacheCollection[parent.id]);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar parentDependencies;\n\t\t\t\tif (this.isSummaryTask(parent)) {\n\t\t\t\t\tif (!this._isAutoSchedulable(parent)) {\n\t\t\t\t\t\tstop = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparentDependencies = this._getDirectDependencies(parent, selectSuccessors);\n\t\t\t\t\t\tif (caching) {\n\t\t\t\t\t\t\tcacheCollection[parent.id] = parentDependencies;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tinheritedRelations = inheritedRelations.concat(parentDependencies);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}, task.id, this);\n\t\t}\n\n\t\treturn inheritedRelations;\n\t};\n\n\n\tgantt._getDirectSuccessors = function (task) {\n\t\treturn this._getDirectDependencies(task, true);\n\t};\n\n\tgantt._getInheritedSuccessors = function (task) {\n\t\treturn this._getInheritedDependencies(task, true);\n\t};\n\n\tgantt._getDirectPredecessors = function (task) {\n\t\treturn this._getDirectDependencies(task, false);\n\t};\n\n\tgantt._getInheritedPredecessors = function (task) {\n\t\treturn this._getInheritedDependencies(task, false);\n\t};\n\n\tgantt._getSuccessors = function (task, skipInherited) {\n\t\tvar successors = this._getDirectSuccessors(task);\n\t\tif (skipInherited) {\n\t\t\treturn successors;\n\t\t} else {\n\t\t\treturn successors.concat(this._getInheritedSuccessors(task));\n\t\t}\n\t};\n\n\tgantt._getPredecessors = function (task, skipInherited) {\n\t\tvar key = String(task.id) + \"-\" + String(skipInherited);\n\t\tvar result;\n\n\t\tif (caching && getPredecessorsCache[key]) {\n\t\t\treturn getPredecessorsCache[key];\n\t\t}\n\n\t\tvar predecessors = this._getDirectPredecessors(task);\n\t\tif (skipInherited) {\n\t\t\tresult = predecessors;\n\t\t} else {\n\t\t\tresult = predecessors.concat(this._getInheritedPredecessors(task));\n\t\t}\n\t\tif (caching) {\n\t\t\tgetPredecessorsCache[key] = result;\n\t\t}\n\t\treturn result;\n\t};\n\n\n\tgantt._convertToFinishToStartLink = function (id, link, sourceTask, targetTask, sourceParent, targetParent) {\n\t\t// convert finish-to-finish, start-to-finish and start-to-start to finish-to-start link and provide some additional properties\n\t\tvar res = {\n\t\t\ttarget: id,\n\t\t\tlink: gantt.config.links.finish_to_start,\n\t\t\tid: link.id,\n\t\t\tlag: link.lag || 0,\n\t\t\tsource: link.source,\n\t\t\tpreferredStart: null,\n\t\t\tsourceParent: sourceParent,\n\t\t\ttargetParent: targetParent,\n\t\t\thashSum: null\n\t\t};\n\n\t\tvar additionalLag = 0;\n\t\tswitch (link.type) {\n\t\t\tcase gantt.config.links.start_to_start:\n\t\t\t\tadditionalLag = -sourceTask.duration;\n\t\t\t\tbreak;\n\t\t\tcase gantt.config.links.finish_to_finish:\n\t\t\t\tadditionalLag = -targetTask.duration;\n\t\t\t\tbreak;\n\t\t\tcase gantt.config.links.start_to_finish:\n\t\t\t\tadditionalLag = -sourceTask.duration - targetTask.duration;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tadditionalLag = 0;\n\t\t}\n\n\t\tres.lag += additionalLag;\n\t\tres.hashSum = res.lag + \"_\" + res.link + \"_\" + res.source + \"_\" + res.target;\n\t\treturn res;\n\t};\n};","var linksBuilder = require(\"../../core/relations/links_builder\")(gantt);\nvar graphHelper = require(\"../../core/relations/graph_helper\")(gantt);\n\nmodule.exports = function(gantt){\n\n\tgantt._isProjectEnd = function(task) {\n\t\treturn !(this._hasDuration({\n\t\t\tstart_date: task.end_date,\n\t\t\tend_date: this._getProjectEnd(),\n\t\t\ttask: task\n\t\t}));\n\t};\n\n\treturn {\n\t\t_needRecalc: true,\n\t\t_cache: null,\n\t\treset: function(){\n\t\t\tthis._needRecalc = true;\n\t\t\tthis._cache = null;\n\t\t},\n\t\t_isRecalcNeeded: function(){\n\t\t\treturn this._needRecalc;\n\t\t},\n\t\t_getLinks: function(){\n\t\t\tvar links = linksBuilder.getLinkedTasks();\n\t\t\treturn graphHelper.groupAdjacentEdges(links);\n\t\t},\n\t\t_calculateBranch: function(task, path, criticalTasks, adjacentLinks){\n\t\t\tpath[task.id] = true;\n\t\t\tif(criticalTasks[task.id] !== undefined){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar stack = [task];\n\n\t\t\twhile(stack.length) {\n\t\t\t\ttask = stack.pop();\n\n\t\t\t\tif(criticalTasks[task.id] || gantt._isProjectEnd(task)){\n\t\t\t\t\tcriticalTasks[task.id] = true;\n\t\t\t\t\twhile(stack.length){\n\t\t\t\t\t\tvar task = stack.pop();\n\t\t\t\t\t\tcriticalTasks[task.id] = true;\n\t\t\t\t\t}\n\t\t\t\t}else {\n\t\t\t\t\tcriticalTasks[task.id] = false;\n\t\t\t\t\tvar successors = adjacentLinks[task.id] || [];\n\t\t\t\t\tfor (var i = 0; i < successors.length; i++) {\n\n\t\t\t\t\t\tvar next = gantt.getTask(successors[i].target);\n\t\t\t\t\t\tif (gantt._getSlack(task, next, successors[i]) <= 0 && (!path[next.id] || criticalTasks[next.id])) {\n\t\t\t\t\t\t\tpath[next.id] = true;\n\n\t\t\t\t\t\t\tstack.push(task);\n\t\t\t\t\t\t\tstack.push(next);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_calculateSummaryTasks: function(summaryHash, criticalHash){\n\t\t\tfor(var i in criticalHash){\n\t\t\t\tif(criticalHash[i]){\n\t\t\t\t\tvar parent = gantt.getParent(i);\n\t\t\t\t\twhile(summaryHash[parent] === undefined && gantt.isTaskExists(parent)){\n\t\t\t\t\t\tsummaryHash[parent] = true;\n\t\t\t\t\t\tparent = gantt.getParent(parent);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor(var i in summaryHash){\n\t\t\t\tcriticalHash[i] = !!summaryHash[i];\n\t\t\t}\n\t\t},\n\n\t\t_calculate: function calculateCriticalPath(){\n\t\t\tvar criticalTasks = {};\n\t\t\tvar clearCache = false;\n\t\t\tvar path = {};\n\t\t\tif(!gantt._isLinksCacheEnabled()) {\n\t\t\t\tgantt._startLinksCache();\n\t\t\t\tclearCache = true;\n\t\t\t}\n\t\t\tvar links = this._getLinks();\n\n\t\t\tvar summaryTasks = {};\n\t\t\tgantt.eachTask(function(task){\n\t\t\t\tif(path[task.id])\n\t\t\t\t\treturn;\n\t\t\t\tif(gantt.isSummaryTask(task)){\n\t\t\t\t\tsummaryTasks[task.id] = undefined;\n\t\t\t\t}else{\n\t\t\t\t\tthis._calculateBranch(task, path, criticalTasks, links);\n\t\t\t\t}\n\t\t\t}, gantt.config.root_id, this);\n\n\t\t\tthis._calculateSummaryTasks(summaryTasks, criticalTasks);\n\n\t\t\tif(clearCache)\n\t\t\t\tgantt._endLinksCache();\n\t\t\treturn criticalTasks;\n\t\t},\n\n\t\tisCriticalTask: function(task) {\n\t\t\tif(!task) return false;\n\n\t\t\tif(this._isRecalcNeeded()){\n\t\t\t\tthis._cache = this._calculate();\n\t\t\t\tthis._needRecalc = false;\n\t\t\t}\n\n\t\t\treturn this._cache[task.id];\n\t\t},\n\n\t\tinit: function(){\n\t\t\tvar resetCache = gantt.bind(function(){\n\t\t\t\tthis.reset();\n\t\t\t\treturn true;\n\t\t\t}, this);\n\n\t\t\tvar handleTaskIdChange = gantt.bind(function (oldId, newId) {\n\t\t\t\tif (this._cache) {\n\t\t\t\t\tthis._cache[newId] = this._cache[oldId];\n\t\t\t\t\tdelete this._cache[oldId];\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}, this);\n\n\t\t\tgantt.attachEvent(\"onAfterLinkAdd\", resetCache);\n\t\t\tgantt.attachEvent(\"onAfterLinkUpdate\", resetCache);\n\t\t\tgantt.attachEvent(\"onAfterLinkDelete\", resetCache);\n\t\t\tgantt.attachEvent(\"onAfterTaskAdd\", resetCache);\n\t\t\tgantt.attachEvent(\"onTaskIdChange\", handleTaskIdChange);\n\t\t\tgantt.attachEvent(\"onAfterTaskUpdate\", resetCache);\n\t\t\tgantt.attachEvent(\"onAfterTaskDelete\", resetCache);\n\t\t\tgantt.attachEvent(\"onParse\", resetCache);\n\t\t\tgantt.attachEvent(\"onClearAll\", resetCache);\n\n\n\t\t\tvar criticalPathHandler = function(){\n\t\t\t\tif(gantt.config.highlight_critical_path)\n\t\t\t\t\tgantt.render();\n\t\t\t};\n\t\t\tgantt.attachEvent(\"onAfterLinkAdd\", criticalPathHandler);\n\t\t\tgantt.attachEvent(\"onAfterLinkUpdate\", criticalPathHandler);\n\t\t\tgantt.attachEvent(\"onAfterLinkDelete\", criticalPathHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskAdd\", criticalPathHandler);\n\t\t\tgantt.attachEvent(\"onTaskIdChange\", function (oldId, newId) {\n\t\t\t\tif (gantt.config.highlight_critical_path && gantt.isTaskExists(newId)) {\n\t\t\t\t\tgantt.refreshTask(newId);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t});\n\t\t\tgantt.attachEvent(\"onAfterTaskUpdate\", criticalPathHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskDelete\", criticalPathHandler);\n\t\t}\n\t};\n};","var linksBuilder = require(\"../../core/relations/links_builder\")(gantt);\nvar helpers = require(\"../../utils/helpers\");\n\nmodule.exports = function(gantt) {\n\tvar _private = {\n\t\t_freeSlack: {},\n\t\t_totalSlack: {},\n\t\t_slackNeedCalculate: true,\n\t\t_linkedTasksById: {},\n\t\t_calculateTotalSlack: function() {\n\t\t\tvar linksByTaskId = this._linkedTasksById;\n\n\t\t\thelpers.forEach(linksBuilder.getLinkedTasks(), function(entry) {\n\t\t\t\tvar task = gantt.getTask(entry.target);\n\t\t\t\tvar slack = gantt.getFreeSlack(task);\n\n\t\t\t\tif (!linksByTaskId[entry.source]) {\n\t\t\t\t\tlinksByTaskId[entry.source] = {\n\t\t\t\t\t\tminSlack: {\n\t\t\t\t\t\t\ttarget: entry.target,\n\t\t\t\t\t\t\tslack: slack\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlinked: []\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tif (slack < linksByTaskId[entry.source].minSlack.slack) {\n\t\t\t\t\t\tlinksByTaskId[entry.source].minSlack = {\n\t\t\t\t\t\t\ttarget: entry.target,\n\t\t\t\t\t\t\tslack: slack\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlinksByTaskId[entry.source].linked.push({\n\t\t\t\t\ttarget: entry.target,\n\t\t\t\t\tslack: slack\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tvar totalSlackByTaskId = {};\n\n\t\t\tgantt.eachTask(function(entry) {\n\t\t\t\tif (gantt.isSummaryTask(entry)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (totalSlackByTaskId[entry.id] === undefined) {\n\t\t\t\t\ttotalSlackByTaskId[entry.id] = 0;\n\t\t\t\t}\n\t\t\t\ttotalSlackByTaskId[entry.id] += _private._chainSlackCount(entry);\n\t\t\t});\n\n\t\t\tgantt._slacksChanged = false;\n\t\t\tthis._slackNeedCalculate = false;\n\t\t\tthis._totalSlack = totalSlackByTaskId;\n\n\t\t\treturn totalSlackByTaskId;\n\t\t},\n\t\t_chainSlackCount: function(entry, additional) {\n\t\t\tadditional = additional || 0;\n\t\t\tswitch (true) {\n\t\t\tcase (!this._linkedTasksById[entry.id]):\n\t\t\t\treturn gantt.calculateDuration(entry.end_date, gantt.getSubtaskDates().end_date) + additional;\n\t\t\tcase (this._linkedTasksById[entry.id].linked.length === 1):\n\t\t\t\treturn this._chainSlackCount(gantt.getTask(this._linkedTasksById[entry.id].linked[0].target), gantt.getFreeSlack(entry)) + additional;\n\t\t\tcase (this._linkedTasksById[entry.id].linked.length > 1):\n\t\t\t\tvar targetWithMinimalSlack = this._getTargetWithMinimalSlack(this._linkedTasksById[entry.id].linked);\n\n\t\t\t\treturn this._chainSlackCount(gantt.getTask(targetWithMinimalSlack.target), gantt.getFreeSlack(entry)) + additional;\n\t\t\t}\n\t\t},\n\n\t\t_getTargetWithMinimalSlack: function(linked) {\n\t\t\tvar result;\n\t\t\thelpers.forEach(linked, function(entry) {\n\t\t\t\tif (result === undefined || entry.slack < result.slack) {\n\t\t\t\t\tresult = entry;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn result;\n\t\t},\n\n\t\t_calculateTaskSlack: function(task) {\n\t\t\tvar slack;\n\n\t\t\tif (task.$source && task.$source.length) {\n\t\t\t\tslack = this._calculateRelationSlack(task);\n\t\t\t} else {\n\t\t\t\tslack = this._calculateHierarchySlack(task);\n\t\t\t}\n\n\t\t\treturn slack;\n\t\t},\n\n\t\t_calculateRelationSlack: function(task) {\n\t\t\tvar minSlack = 0,\n\t\t\t\tslack,\n\t\t\t\tlinks = task.$source;\n\n\t\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\t\tslack = this._calculateLinkSlack(links[i]);\n\t\t\t\tif (minSlack > slack || i === 0) {\n\t\t\t\t\tminSlack = slack;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn minSlack;\n\t\t},\n\n\t\t_calculateLinkSlack: function(linkId) {\n\t\t\tvar link = gantt.getLink(linkId);\n\t\t\tvar slack = 0;\n\t\t\tif (gantt.isTaskExists(link.source) && gantt.isTaskExists(link.target)) {\n\t\t\t\tslack = gantt.getSlack(gantt.getTask(link.source), gantt.getTask(link.target));\n\t\t\t}\n\t\t\treturn slack;\n\t\t},\n\n\t\t_calculateHierarchySlack: function(task) {\n\t\t\tvar slack = 0;\n\t\t\tvar from;\n\t\t\tvar to = gantt.getSubtaskDates().end_date;\n\t\t\tif (gantt.isTaskExists(task.parent)) {\n\t\t\t\tfrom = gantt.getSubtaskDates(task.id).end_date || task.end_date;\n\t\t\t} else {\n\t\t\t\tfrom = task.end_date;\n\t\t\t}\n\t\t\tslack = Math.max(gantt.calculateDuration(from, to), 0);\n\t\t\treturn slack;\n\t\t},\n\n\t\t_resetTotalSlackCache: function() {\n\t\t\tthis._slackNeedCalculate = true;\n\t\t},\n\n\t\t_shouldCalculateTotalSlack: function() {\n\t\t\treturn this._slackNeedCalculate;\n\t\t},\n\n\t\tgetFreeSlack: function(task) {\n\t\t\tif (!gantt.isTaskExists(task.id)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (!this._freeSlack[task.id]) {\n\t\t\t\tif (gantt.isSummaryTask(task)) {\n\t\t\t\t\tthis._freeSlack[task.id] = undefined;\n\t\t\t\t} else {\n\t\t\t\t\tthis._freeSlack[task.id] =  this._calculateTaskSlack(task);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._freeSlack[task.id];\n\t\t},\n\n\t\tgetTotalSlack: function(task) {\n\t\t\tif (this._shouldCalculateTotalSlack()) {\n\t\t\t\tthis._calculateTotalSlack();\n\t\t\t}\n\t\t\tif (task === undefined) {\n\t\t\t\treturn this._totalSlack;\n\t\t\t}\n\t\t\tif (task.id !== undefined) {\n\t\t\t\treturn this._totalSlack[task.id];\n\t\t\t}\n\t\t\treturn this._totalSlack[task] || 0;\n\t\t},\n\n\t\tdropCachedFreeSlack: function() {\n\t\t\tthis._linkedTasksById = {};\n\t\t\tthis._freeSlack =  {};\n\t\t\tthis._resetTotalSlackCache();\n\t\t},\n\n\t\tinit: function(){\n\t\t\tfunction slackHandler(){\n\t\t\t\t_private.dropCachedFreeSlack();\n\t\t\t}\n\n\t\t\tgantt.attachEvent(\"onAfterLinkAdd\", slackHandler);\n\t\t\tgantt.attachEvent(\"onTaskIdChange\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterLinkUpdate\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterLinkDelete\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskAdd\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskUpdate\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskDelete\", slackHandler);\n\t\t\tgantt.attachEvent(\"onRowDragEnd\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskMove\", slackHandler);\n\t\t}\n\t};\n\n\treturn _private;\n};","require(\"../core/relations/links_common\")(gantt);\n\nvar _private = require(\"./critical_path/slack\")(gantt);\n_private.init();\n\ngantt.getFreeSlack = function(task) {\n\treturn _private.getFreeSlack(task);\n};\n\ngantt.getTotalSlack = function(task) {\n\treturn _private.getTotalSlack(task);\n};\n\nvar criticalPath = require(\"./critical_path/critical_path\")(gantt);\ngantt.config.highlight_critical_path = false;\ncriticalPath.init();\n\ngantt.isCriticalTask = function (task) {\n\tgantt.assert(!!(task && task.id !== undefined), \"Invalid argument for gantt.isCriticalTask\");\n\treturn criticalPath.isCriticalTask(task);\n};\n\ngantt.isCriticalLink = function (link) {\n\treturn this.isCriticalTask(gantt.getTask(link.source));\n};\n\n\ngantt.getSlack = function(task1, task2) {\n\tvar minSlack = 0;\n\tvar relations = [];\n\tvar common = {};\n\n\tfor (var i = 0; i < task1.$source.length; i++) {\n\t\tcommon[task1.$source[i]] = true;\n\t}\n\tfor (var i = 0; i < task2.$target.length; i++) {\n\t\tif(common[task2.$target[i]])\n\t\t\trelations.push(task2.$target[i]);\n\t}\n\n\tfor (var i = 0; i < relations.length; i++) {\n\t\tvar link = this.getLink(relations[i]);\n\t\tvar newSlack = this._getSlack(task1, task2, this._convertToFinishToStartLink(link.id, link, task1, task2, task1.parent, task2.parent));\n\n\t\tif (minSlack > newSlack || i === 0) {\n\t\t\tminSlack = newSlack;\n\t\t}\n\t}\n\n\treturn minSlack;\n};\n\ngantt._getSlack = function (task, next_task, relation) {\n\t// relation - link expressed as finish-to-start (gantt._convertToFinishToStartLink)\n\tvar types = this.config.types;\n\n\tvar from = null;\n\tif (this.getTaskType(task.type) == types.milestone) {\n\t\tfrom = task.start_date;\n\t} else {\n\t\tfrom = task.end_date;\n\t}\n\n\tvar to = next_task.start_date;\n\n\tvar duration = 0;\n\tif (+from > +to) {\n\t\tduration = -this.calculateDuration({start_date: to, end_date: from, task: task});\n\t} else {\n\t\tduration = this.calculateDuration({start_date: from, end_date: to, task: task});\n\t}\n\n\tvar lag = relation.lag;\n\tif (lag && lag*1 == lag) {\n\t\tduration -= lag;\n\t}\n\n\treturn duration;\n};\n\n\n\n"],"sourceRoot":""}